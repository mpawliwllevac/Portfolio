"0","#This is for the second example of the article I'm writing on my understanding of shiny"
"0","#This example needs fuildpage, tabs, server and ui elements"
"0","# library(tidyverse)"
"0","set.seed(11234)"
"0","participant <- 1:50"
"0","group <- sample(c(""A"",""B"",""C"",""D""), 50, replace = TRUE)"
"0","score1 <- sample(c(50:100,60:90,70:80),50, replace = TRUE)"
"0","score2 <- sample(c(1:100),50,replace = TRUE)"
"0","df <- data.frame(participant,group,score1,score2)"
"0","ui <- fluidPage("
"0"," "
"0","  titlePanel(""Example 2""),     # our title"
"0","  sidebarLayout(     #beginning of the sidebar functions (also need sidebarPanel)"
"0","    sidebarPanel(    "
"0","       sliderInput(inputId = ""s1"",     #Our Slider arguments start here"
"0","                   label = ""My Slider"","
"0","                   value = 1, "
"0","                   min = 1, "
"0","                   max = 20),"
"0","       checkboxGroupInput(""groupcheck"", #Our checkbox arguments start here"
"0","                          label = h3(""Groups""), "
"0","                          choices = list(""A"", ""B"", ""C"", ""D""),"
"0","                          selected = list(""A"", ""B"", ""C"", ""D""))"
"0","    ),"
"0","    "
"0","    mainPanel( #This is the main panel"
"0","      fluidRow( textOutput(""textout1""), ""test test test"", textOutput(""textselection""))"
"0","     "
"0","                "
"0","    )"
"0","  )"
"0",")"
"0","server <- function(input, output, session) { #We have server arguments now"
"0","  "
"0","  data_Groupcheck <- reactive({ #reactive element to let us better use this later"
"0","    input$Groupcheck"
"0","  })"
"0","  "
"0","  df_selected <- reactive({ #reactive element to serve as an intermediary filter"
"0","    df %>% "
"0","      filter(group %in% input$groupcheck)"
"0","  })"
"0","  "
"0","  "
"0","  output$textout1 <- renderText({ #outputs get used either by other outputs or UI elements; "
"0","    paste0(input$s1, "" times 5 is "", input$s1 * 5) #this uses the slider input below"
"0","  }) #renderText is how we create dynamic text that can change based on data"
"0","  "
"0","  output$textselection <- renderText({"
"0","    paste0(nrow(df_selected()))"
"0","  })"
"0","  "
"0","}"
"0","shinyApp(ui = ui, server = server)"
"2","
Listening on http://127.0.0.1:7793
"
"2","
"
